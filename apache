接口自动化我目前认为比较好的解决方案是：框架、脚本、测试数据三个分离，这样能很大程度上减少后期的一些维护成本，花更多时间进行三者的优化，提高效率。



在安装框架所必须的工具之前，需先安装brew软件安装管理命令，有关于brew的介绍，请查看 brew 官方介绍。如有brew，可忽略这步。终端上，运行以下命令：

/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

 

搭建一个完整的接口自动化框架，需要以下几个工具（仅以 macOS 系统为基准）：

工具

版本要求

JDK

1.8

Tomcat

9.0.2

Jenkins

2.89.2

SVN Server

1.8

SVN Client(Cornerstone)

3.0.3

JMeter

3.3

 

一、安装 jdk

先安装 Apple 提供的 Java 6 runtime 版本，才能驱动 Java 7，Java 8

Apple 官方的 Java 最新版本可到这里下载：https://support.apple.com/kb/DL1572 

Java 8 最新版本可到这里下载：http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html

以上2步均成功安装后，在配置文件添加 JAVA_HOME，在终端使用 vim ~/.bash_profile，即可打开该用户当前的配置文件。填写

export JAVA_HOME=$(/usr/libexec/java_home)

export PATH=${PATH}:${JAVA_HOME}/bin

验证是否安装成功，在终端输入以下命令即可。

java -version         # 有版本反馈信息即可

 

二、安装 Jenkins

下面是2种安装 Jenkins 的方法，可以随意选择一种。

1、第三方命令安装，安装和使用特别省心

brew install jenkins            # 安装命令

brew services start jenkins     # 启动服务 Jenkins 命令

brew services stop jenkins      # 停止服务 Jenkins 命令

Jenkins 的默认端口号是8080，这个通用端口号很多服务会占用，为了避免服务冲突，可修改默认端口号。进入到路径/usr/local/Cellar/jenkins，选择安装的版本，打开homebrew.mxcl.jenkins.plist文件，将其中的参数--httpPort=8080改为--httpPort=8888

2、官网下载 war 文件。

下载地址：http://mirrors.jenkins.io/war-stable/latest/jenkins.war

启动命令

java -jar jenkins.war --httpPort=8888  # 服务启动命令，带指定端口号

停止命令

ps | grep 'jenkins'     # 先检查出 Jenkins 的进程号

kill pid                # pid 就是 Jenkins 的进程号

执行 Jenkins 启动命令后，在浏览器打开http://localhost:8888即可打开 Jenkins 服务。按照以下图片设置好 Jenkins 的账号密码、插件等其他一些初始设置。









 

三、安装 SVN

SVN 分为 server 端和 client 端，mac 默认已安装 SVN 服务。 

1、SVN server

macOS 默认已安装 SVN server ，所以可以直接跳过这个过程，创建一个在线的 SVN 库即可。具体教程，请查看 Mac 搭建 SVN 服务器环境

 

2、SVN 客户端

macOS 可以使用 Cornerstone，Windows 可使用TortoiseSVN。软件使用方法，可自行查阅。

 

四、安装 ANT 项目构建工具

1、第三方命令安装，安装和使用特别省心

brew install ant         # 安装命令

安装完毕后，ANT 安装的路径。

/usr/local/Cellar/ant/x.x/libexec        # x.x 是安装的 ANT 版本

 

2、到官网下载最新的 ANT http://ant.apache.org，解压到指定目录（eg:/your/path/ant-dir-name）。在配置文件添加 ANT_HOME，在终端使用 vim ~/.bash_profile，添加：

export ANT_HOME=/your/path/ant-dir-name

export PATH=${PATH}:${ANT_HOME}/bin

验证是否安装成功，在终端输入以下命令即可。

ant -v         # 有版本反馈信息即可

 

五、安装 JMeter 性能测试工具

1、第三方命令安装，安装和使用特别省心

brew install jmeter         # 安装命令

安装完毕后，JMeter 安装的路径，修改源码和增加第三方插件、函数，均可在这里添加修改。

/usr/local/Cellar/jmeter/x.x/libexec        # x.x 是安装的 JMeter 版本

 

2、官网 http://jmeter.apache.org/download_jmeter.cgi下载最新的 JMeter ，解压到指定目录（eg:/your/path/jmeter-dir-name）。在配置文件添加 JMETER_HOME，在终端使用 vim ~/.bash_profile，添加：

export JMETER_HOME=/your/path/jmeter-dir-name

export PATH=${PATH}:${JMETER_HOME}/bin

 

以上2种安装方式，验证是否安装成功，在终端输入以下命令即可。

jmeter -v         # 有版本反馈信息即可

 

六、安装 tomcat 9

官网 https://tomcat.apache.org/download-90.cgi 下载最新的 tomcat ，解压到指定目录（eg:/your/path/tomcat-dir-name）。在配置文件添加 TOMCAT_HOME，在终端使用 vim ~/.bash_profile，添加：

export TOMCAT_HOME=/your/path/tomcat-dir-name

export PATH=${PATH}:${TOMCAT_HOME}/bin

 

验证是否安装成功，在终端尝试启动 tomcat 服务即可。

startup.sh            # 开启 tomcat 服务

# 有版本反馈信息和【Tomcat started】字眼即可

shutdown.sh           # 关闭 tomcat 服务

 

七、环境搭建总结

如果以上六个步骤都完成，那基本上整个 macOS 的接口自动化环境框架算是搭建完毕了。

 

大家一起奋斗吧！！
